@* @namespace WhatsApp_App.Components.Graphs *@

@using System.Text.RegularExpressions
@using BlazorBootstrap
@using Components.Models



@* Display the graph *@
<div style="width: 100%">
    <PieChart @ref="pieChart" />
</div>



@code {

    // Parameters for the pieChart
    [Parameter]
    public string Title { get; set; } = "";

    [Parameter]
    public string PopupLabel { get; set; } = "";

    [Parameter]
    public List<EntryCount> Data { get; set; } = new List<EntryCount> { };


    // Data variables
    public List<string> AllLabels { get; set; } = new List<string> { };
    public List<double?> dataValues { get; set; } = new List<double?> { };
    private ChartData chartData = default!;


    private PieChart pieChart = default!;

    private PieChartOptions pieChartOptions = default!;

    private Random random = new();


    // On load, generate the pie chart
    protected override void OnInitialized()
    {
        string[] backgroundColors = ColorUtility.CategoricalTwelveColors;


        // Add each entry
        foreach (EntryCount entry in Data)
        {
            AllLabels.Add(entry.Content);
            dataValues.Add(entry.Count);
        }

        // Set the data labels count
        var dataLabelsCount = AllLabels.Count;


        // Load the chart data
        var dataSet = new PieChartDataset
        {
            Label = PopupLabel,
            Data = dataValues,
            BackgroundColor = backgroundColors.Take(dataLabelsCount).ToList(),
            Datalabels = { Anchor = Anchor.End }
        };

        // Set the chart data
        chartData = new ChartData
        {
            Labels = AllLabels,
            Datasets = new List<IChartDataset> { dataSet }
        };

        // Pie chart options
        pieChartOptions = new();
        pieChartOptions.Responsive = true;


        // Title settings
        pieChartOptions.Plugins.Title = new ChartPluginsTitle
        {
            Text = Title,
            Display = false,
            Color = "#fff",
            Font = new() { Size = 20 }
        };

        pieChartOptions.Plugins.Legend = new ChartPluginsLegend
        {
            Display = true,
            Labels = new ChartPluginsLegendLabels
            {
                Color = "#fff",
                Font = new() { Size = 12 },
                Padding = 10
            },
        };




        // Legend label options
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await pieChart.InitializeAsync(chartData, pieChartOptions, new string[] { "ChartDataLabels" });
        }
        await base.OnAfterRenderAsync(firstRender);
    }
}