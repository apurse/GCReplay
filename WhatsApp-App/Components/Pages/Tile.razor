@* Add this as a page with a href *@
@using System.Text.RegularExpressions
@rendermode InteractiveServer
@using BlazorBootstrap

@using Components.Models


<div class="tile" style="@Style">
    <h3>@Title</h3>
    @if (Graph != null)
    {
        @if (Graph.GraphType == "pie")
        {
            <PieChartMaker Title="@Graph.GraphTitle" PopupLabel="@Graph.PopupLabel" Data="@Data" />
        }
        else if (Graph.GraphType == "bar")
        {
            <BarGraphMaker Title="@Graph.GraphTitle" XLabel="@Graph.XLabel" YLabel="@Graph.YLabel" Data="@Data" />
        }
    }
    <ul>
        @foreach (EntryCount entry in Data)
        {
            @if (Message != null)
            {
                <li>@entry.Content: @entry.Count</li>
            }
            else
            {
                <li>@Message</li>
            }
        }
    </ul>
</div>







@* Code block for writing C# *@
@code {

    public class messageFormat
    {
        public string Date = "";
        public string Time = "";
        public string Sender = "";
        public string Content = "";
    }

    [Parameter]
    public string Title { get; set; } = "";

    [Parameter]
    public string? Message { get; set; } = "";

    [Parameter]
    public List<EntryCount> Data { get; set; } = new List<EntryCount> { };

    [Parameter]
    public string Style { get; set; } = "";

    [Parameter]
    public GraphDetails? Graph { get; set; } = new GraphDetails { };




    private List<messageFormat> filteredMessages = new List<messageFormat> { };
    private List<messageFormat> clickedMessages = new List<messageFormat> { };

    @* protected override void OnInitialized()
    {

    } *@


    private async Task DisplayFiltered(string filter)
    {

        clickedMessages = filteredMessages

        // Check if its empty
        .Where(message => !string.IsNullOrEmpty(message.Time))
        .Where(message => message.Content.Contains(filter))
        .ToList();
    }

}
